{"version":3,"sources":["GAME_VALUE.js","Reducer.js","component/Input.js","component/Ground.js","component/Drop.js","KeyManager.js","component/ListUIComponent.js","component/Menu.js","component/Result.js","component/Sky.js","loaders.js","component/Timer.js","component/Game.js","component/Intro.js","component/ScoreList.js","App.js","serviceWorker.js","index.js"],"names":["GAME_SUCCESS","GAME_FAIL","GAME_NO_EFFECT","GAME_MORE_SPEED_EFFECT","GAME_HIDE_WORD_EFFECT","GAME_LEVEL","GAME_SCORES","FRAME_FOR_MILISEC","GAME_WORD_COUNT","GAME_WIDTH","GAME_GROUND_BOUNDRY","GAME_DROP_SIZE","GAME_BASIC_HEALTH","GAME_CONTENT_INPUT","GAME_INIT","GAME_ADD_DROP","GAME_CHECK_DROPS","GAME_UPDATE_DROPS","GAME_CHANGE_MODE","GAME_HEALTH_SCORE_STORE","GAME_EFFECT","GAME_RESET","initGame","json","Object","assign","type","changeMode","_mode","mode","initalState","effect","effect_count","move_size","content","words_index","words","drops","score","health","Input","props","state","input","handleInputChange","bind","handleKeyPress","e","_content","key","this","dispatch","setState","target","name","value","className","onKeyPress","onChange","Component","connect","Ground","nextProps","Drop","style","top","drop","left","color","item","word","length","keys","cantPress","justPress","document","body","addEventListener","keyCode","charCode","i","ListUIComponent","index","register","onClick","setIndex","parseInt","id","items","getElementsByClassName","KeyManager","justPressed","Menu","options","updateCount","regame","tomenu","ro","map","option","_index","cursor","Result","options1","options2","renderMenuItem","nextgame","saveScore","result","message","Sky","me","React","createRef","rd","renderingData","event","listUI","ref","ready","loadLevel","url","fetch","then","r","loadJSON","Timer","deltaTime","accumulatedTime","lastTime","requestId","undefined","stoped","updateProxy","time","console","log","update","enqueue","window","requestAnimationFrame","cancelAnimationFrame","Game","out","eventCount","gameReady","gameUpdate","startGame","level","sessionStorage","getItem","num","JSON","parse","setItem","stringify","timer","_health","_score","start","_num","alert","confirm","username","prompt","data","localStorage","scores","new_scores","concat","sort","a","b","gameRunning","width","height","removeItem","stop","history","push","Intro","Carousel","Item","src","alt","Caption","Button","variant","size","pathname","ScoreList","list","rs","colSpan","info","Card","Header","Body","Table","striped","bordered","hover","App","exact","path","component","Boolean","location","hostname","match","store","createStore","action","_words","Array","from","j","tmp","Math","floor","random","shuffle","current_effect","current_effect_count","effected_drops","_item","added_drops","_move_size","updated_drops","added_score","subed_health","removed_drops","updated_effect","filter","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.c3d6f208.chunk.js","sourcesContent":["export const GAME_READY = 0;\r\nexport const GAME_RUNNING = 1;\r\nexport const GAME_STOP = 2;\r\nexport const GAME_SUCCESS = 3;\r\nexport const GAME_FAIL = 4;\r\n\r\nexport const GAME_NO_EFFECT = 5;\r\nexport const GAME_MORE_SPEED_EFFECT = 6;\r\nexport const GAME_HIDE_WORD_EFFECT = 7;\r\n\r\nexport const GAME_LEVEL='game-level';\r\nexport const GAME_SCORES = 'game-scores';\r\n\r\nexport const FRAME_FOR_MILISEC = 1/60;\r\nexport const GAME_LEVEL_LIMIT = 3;\r\nexport const GAME_WORD_TIMING = 100;\r\nexport const GAME_WORD_COUNT = 20;\r\nexport const GAME_WIDTH = 1280;\r\nexport const GAME_HEIGHT = 815;\r\nexport const GAME_GROUND_BOUNDRY = 693;\r\nexport const GAME_DROP_SIZE = 80;\r\nexport const GAME_BASIC_HEALTH = 3;\r\n\r\n","import {GAME_READY,GAME_SUCCESS,GAME_FAIL, GAME_WIDTH,GAME_GROUND_BOUNDRY,GAME_DROP_SIZE, GAME_BASIC_HEALTH,GAME_LEVEL,GAME_NO_EFFECT, GAME_HIDE_WORD_EFFECT,GAME_MORE_SPEED_EFFECT,GAME_WORD_COUNT} from './GAME_VALUE';\r\n\r\nconst GAME_CONTENT_INPUT = 'game-content-input';\r\nconst GAME_INIT = 'game-init';\r\nconst GAME_ADD_DROP = 'game-add-drop';\r\nconst GAME_CHECK_DROPS = 'game-check-drops';\r\nconst GAME_UPDATE_DROPS = 'game-update-drops';\r\nconst GAME_CHANGE_MODE = 'game-change-mode';\r\nconst GAME_HEALTH_SCORE_STORE = 'game-health-score-store';\r\nconst GAME_EFFECT = 'game-effect';\r\nconst GAME_RESET = 'game-reset';\r\n\r\n\r\nexport const contentInput = (_content)=>({\r\n    type : GAME_CONTENT_INPUT,\r\n    content : _content\r\n});\r\nexport const initGame = (json) =>(Object.assign({},json,{type : GAME_INIT}));\r\nexport const addDrop = ()=>({\r\n    type : GAME_ADD_DROP\r\n});\r\nexport const updateDrops = ()=>({\r\n    type : GAME_UPDATE_DROPS\r\n});\r\nexport const checkDrops = ()=>({\r\n    type : GAME_CHECK_DROPS\r\n});\r\nexport const changeMode= (_mode)=>({\r\n    type : GAME_CHANGE_MODE,\r\n    mode : _mode\r\n})\r\nexport const storeHealthAndScore = (_health,_score)=>({\r\n    type : GAME_HEALTH_SCORE_STORE,\r\n    health : _health,\r\n    score : _score\r\n})\r\nexport const effectDrops=()=>({\r\n    type : GAME_EFFECT\r\n})\r\nexport const reset=()=>({\r\n    type : GAME_RESET\r\n});\r\nconst initalState = {\r\n    mode : GAME_READY,\r\n    effect : GAME_NO_EFFECT,\r\n    effect_count : 0,\r\n    move_size : 0,\r\n    content : '',\r\n    words_index : 0,\r\n    words : [],\r\n    drops : [],\r\n    score : 0,\r\n    health : GAME_BASIC_HEALTH\r\n}\r\nfunction shuffle(words){\r\n    var i,j,tmp;\r\n    for(i = words.length;i;i--){\r\n        j = Math.floor(Math.random()*i);\r\n        tmp = words[i-1];\r\n        words[i-1] = words[j];\r\n        words[j] = tmp;\r\n    }\r\n}\r\nexport default function reducer(state = initalState, action){\r\n    switch(action.type){\r\n        case GAME_CONTENT_INPUT : \r\n            return Object.assign({},state,{content:action.content});\r\n        case GAME_INIT :\r\n            var _words = Array.from(action.words);\r\n            shuffle(_words);\r\n            return Object.assign({},state, initalState,{move_size:action.move_size,words:_words});\r\n        case GAME_RESET:\r\n            return Object.assign({},state,initalState);\r\n        case GAME_EFFECT : \r\n            var current_effect = state.effect;\r\n            var current_effect_count = state.effect_count;\r\n            var effected_drops = state.drops;\r\n            if(state.effect_count >= 200){\r\n                current_effect = GAME_NO_EFFECT;\r\n                current_effect_count = 0;\r\n                effected_drops = state.drops.map(drop=>{\r\n                    return Object.assign({},{left:drop.left,top:drop.top,word:drop.word,item:drop.item});\r\n                });\r\n            }else{                \r\n                if(state.effect === GAME_HIDE_WORD_EFFECT){\r\n                    effected_drops = state.drops.map(drop=>{\r\n                        return Object.assign({},drop,{effect:'hidden'});\r\n                    });\r\n                }else if(state.effect === GAME_MORE_SPEED_EFFECT){\r\n\r\n                }\r\n                \r\n                current_effect_count = current_effect_count+1;\r\n            }\r\n\r\n            return Object.assign({},state,{drops:effected_drops, effect : current_effect, effect_count : current_effect_count});\r\n        case GAME_HEALTH_SCORE_STORE :\r\n            return Object.assign({},state,{health:action.health,score:action.score});\r\n        case GAME_ADD_DROP : \r\n            var r = Math.random();\r\n            var _item = r >= 0.6 ? true : false;\r\n            var added_drops = state.drops;\r\n            if(state.words_index < GAME_WORD_COUNT){\r\n                added_drops = state.drops.concat({word : state.words[state.words_index],top:-80,left : Math.floor(Math.random()*(GAME_WIDTH-GAME_DROP_SIZE)/GAME_DROP_SIZE*GAME_DROP_SIZE), item : _item});\r\n            }\r\n            return Object.assign({},state,{ drops : added_drops, words_index: state.words_index+1});\r\n        case GAME_UPDATE_DROPS : \r\n            var _move_size = state.move_size;\r\n            if(state.effect === GAME_MORE_SPEED_EFFECT){\r\n                _move_size += 0.5;\r\n            }\r\n            var updated_drops = state.drops.map((drop)=>{\r\n                return Object.assign({},drop,{top : drop.top + _move_size});\r\n            })\r\n            return Object.assign({},state,{drops:updated_drops});\r\n        case GAME_CHECK_DROPS :\r\n            var added_score = state.score;\r\n            var subed_health = state.health;\r\n            var removed_drops = Array.from(state.drops);\r\n            var updated_effect = state.effect;\r\n            if(state.content !== ''){\r\n                removed_drops = removed_drops.filter(drop=>{\r\n                    if(drop.word === state.content){\r\n                        added_score += 10;\r\n                        if(drop.item === true){\r\n                            updated_effect = 6 + Math.floor((2*Math.random()));\r\n                        }\r\n                    }\r\n                    return drop.word !== state.content;\r\n                });\r\n            }\r\n\r\n            removed_drops = removed_drops.filter(drop=>{\r\n                if(drop.top+GAME_DROP_SIZE >= GAME_GROUND_BOUNDRY)\r\n                    subed_health -= 1;\r\n\r\n                return drop.top+GAME_DROP_SIZE < GAME_GROUND_BOUNDRY;\r\n            });\r\n            var _mode = state.mode;\r\n            var level = JSON.parse(sessionStorage.getItem(GAME_LEVEL));\r\n            if(subed_health === 0){\r\n                _mode = GAME_FAIL;\r\n            }else if(added_score / 10 + GAME_BASIC_HEALTH-subed_health === GAME_WORD_COUNT * parseInt(level.num)){\r\n                _mode = GAME_SUCCESS;\r\n            }\r\n            return Object.assign({},state,{mode : _mode, effect : updated_effect, drops : removed_drops, content:'', score : added_score, health : subed_health});\r\n        case GAME_CHANGE_MODE:\r\n            return Object.assign({},state,{mode : action.mode});\r\n        default : \r\n            return state;\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {contentInput} from '../Reducer';\r\nimport './input.css'\r\nclass Input extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            input : ''\r\n        }        \r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    }\r\n    handleKeyPress(e){\r\n        if(e.key === 'Enter'){\r\n            this.props.dispatch(contentInput(this.state.input));\r\n            this.setState({\r\n                input : ''\r\n            })\r\n        }\r\n    }\r\n    handleInputChange(e){\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <input className='input-style' name='input' onKeyPress={this.handleKeyPress} value={this.state.input} onChange={this.handleInputChange}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Input);","import React,{Component} from 'react';\r\nimport './ground.css';\r\nimport Input from './Input'\r\nclass Ground extends Component {\r\n\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        return false;\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='Ground'>\r\n                <Input></Input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ground;","import React,{Component} from 'react';\r\nimport './drop.css';\r\nclass Drop extends Component {\r\n\r\n    render(){\r\n        const style={\r\n            top : this.props.drop.top,\r\n            left : this.props.drop.left,\r\n            color : this.props.drop.item === true ? 'blue' : 'black',\r\n            \r\n        }\r\n        var word = this.props.drop.word;\r\n        if(this.props.drop.effect === 'hidden'){\r\n            word = '';\r\n        }\r\n        // console.log(this.props.word,this.props.item);\r\n        return (\r\n            <div className='Drop' style={style}>\r\n                <div className='drop-img'>\r\n                    {word}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Drop;","class KeyManager {\r\n    constructor(){\r\n        this.length = 256;\r\n        this.keys = [];\r\n        this.cantPress = [];\r\n        this.justPress = [];\r\n\r\n\r\n        document.body.addEventListener('keydown',(e)=>{\r\n            this.keys[e.keyCode || e.charCode || 0] = true;\r\n        });\r\n\r\n        document.body.addEventListener('keyup',(e)=>{\r\n            this.keys[e.keyCode || e.charCode || 0] = false;\r\n        });\r\n    }\r\n    update(){\r\n        for(var i =0 ; i < this.length; i++) {\r\n\t\t\tif(this.cantPress[i] && !this.keys[i]) {\r\n\t\t\t\tthis.cantPress[i] = false;\r\n\t\t\t\tthis.justPress[i] = false;\r\n\t\t\t}else if(this.justPress[i]) {\r\n\t\t\t\tthis.cantPress[i] = true;\r\n\t\t\t\tthis.justPress[i] = false;\r\n\t\t\t}else if(!this.cantPress[i] && this.keys[i]) {\r\n\t\t\t\tthis.justPress[i] = true;\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    justPressed(keyCode){\r\n        return this.justPress[keyCode];\r\n    }\r\n}\r\n\r\n\r\nexport default new KeyManager();","import {Component} from 'react';\r\nimport KeyManager from '../KeyManager';\r\nclass ListUIComponent extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.index = 0;\r\n        this.length = 0;\r\n        this.register = false;\r\n        this.onClick = this.onClick.bind(this);\r\n        this.setIndex = this.setIndex.bind(this);\r\n    }\r\n    onClick(){}\r\n    setIndex(e){\r\n        this.index = parseInt(e.target.id);\r\n    }\r\n    componentDidUpdate(){\r\n        \r\n        \r\n        if (!this.register) {\r\n            var items = document.getElementsByClassName('item');\r\n            for (var i = 0; i < items.length; i++) {\r\n\r\n                items[i].addEventListener('mouseover', this.setIndex);\r\n\r\n                items[i].addEventListener('click', this.onClick);\r\n            }\r\n            this.register = true;\r\n        } \r\n\r\n        if(KeyManager.justPressed(37) || KeyManager.justPressed(38)){\r\n            this.index = this.index - 1 < 0 ? this.length - 1 : this.index - 1;\r\n        }\r\n\r\n        if(KeyManager.justPressed(39) || KeyManager.justPressed(40)){\r\n            this.index = this.index + 1 === this.length ? 0 : this.index + 1;\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default ListUIComponent;","import React from 'react';\r\nimport ListUIComponent from './ListUIComponent';\r\nimport KeyManager from '../KeyManager';\r\nimport { connect } from 'react-redux';\r\nimport {changeMode} from '../Reducer';\r\nimport {GAME_RUNNING}  from '../GAME_VALUE';\r\nclass Menu extends ListUIComponent {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.options = ['계속하기','다시 시작하기','그만하기'];\r\n        this.length = this.options.length;\r\n    }\r\n    shouldComponentUpdate(nextProps){\r\n        return this.props.updateCount !== nextProps.updateCount;\r\n    }\r\n    onClick(){        \r\n        if(this.index === 0){\r\n            this.props.dispatch(changeMode(GAME_RUNNING));\r\n        }else if(this.index === 1){\r\n            this.props.regame();\r\n        }else if(this.index === 2){\r\n            this.props.tomenu();\r\n        }\r\n    }\r\n    render(){\r\n        if(KeyManager.justPressed(13)){\r\n            this.onClick();\r\n        }\r\n        var ro = this.options.map((option,_index)=>{\r\n            if(this.index === _index){\r\n                var style = {\r\n                    color : 'red',\r\n                    cursor : 'pointer'\r\n                };\r\n                return <div className='item' id={_index} key={_index} style={style}>{option}</div>\r\n            }else{\r\n                return <div className='item' id={_index} key={_index}>{option}</div>\r\n            }\r\n            \r\n        });\r\n\r\n        return (\r\n            <div className='Menu'>\r\n                {ro}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Menu);","import React from 'react';\r\nimport ListUIComponent from './ListUIComponent';\r\nimport KeyManager from '../KeyManager';\r\nimport {GAME_SUCCESS,GAME_FAIL} from '../GAME_VALUE';\r\n\r\nclass Result extends ListUIComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.options1 = ['다음 단계','메뉴','기록 저장'];\r\n        this.options2 = ['다시 하기','메뉴','기록 저장'];\r\n        this.renderMenuItem = this.renderMenuItem.bind(this);        \r\n    }\r\n    shouldComponentUpdate(nextProps){\r\n        return this.props.updateCount !== nextProps.updateCount;\r\n    }\r\n\r\n    renderMenuItem(option,_index){\r\n        if (this.index === _index) {\r\n            var style = {\r\n                color : 'red',\r\n                cursor : 'pointer'\r\n            };\r\n            return <div className='item result-item' id={_index} key={_index} style={style}>{option}</div>\r\n        } else {\r\n            return <div className='item result-item' id={_index} key={_index}>{option}</div>\r\n        }\r\n    }\r\n    onClick(){\r\n        if(this.index === 0){\r\n            if(this.props.mode === GAME_SUCCESS){\r\n                this.props.nextgame();\r\n            }else{\r\n                this.props.regame();\r\n            }\r\n        }else if(this.index === 1){\r\n            this.props.tomenu();\r\n        }else if(this.index === 2){\r\n            this.props.saveScore();\r\n        }\r\n    }\r\n    render(){\r\n        if(this.props.mode !== GAME_SUCCESS && this.props.mode !== GAME_FAIL) {\r\n            this.index = 0;\r\n            return '';\r\n        }\r\n        var result = {\r\n            style : {\r\n                color : ''\r\n            },\r\n            message : ''\r\n        };\r\n        var ro;\r\n        if(this.props.mode === GAME_SUCCESS){\r\n            result.style = {color:'green'};\r\n            result.message = 'Clear!!!';\r\n            ro = this.options1.map(this.renderMenuItem);\r\n            this.length = this.options1.length;\r\n        }else{\r\n            result.style = {color:'red'};\r\n            result.message = 'Fail...';\r\n            ro = this.options2.map(this.renderMenuItem);\r\n            this.length = this.options2.length;\r\n        }\r\n\r\n\r\n        if(KeyManager.justPressed(13)){\r\n            this.onClick();\r\n        }\r\n\r\n        return (\r\n            <div className='Result'>\r\n                <div className='mention' style={result.style}>{result.message}</div>\r\n                <div className='score'>점수 : {this.props.score}</div>\r\n                {ro}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Result;","import React,{Component} from 'react';\r\nimport './sky.css';\r\nimport './menu.css';\r\nimport Drop from './Drop';\r\nimport Menu from './Menu';\r\nimport Result from './Result';\r\nimport {GAME_HIDE_WORD_EFFECT, GAME_MORE_SPEED_EFFECT,GAME_STOP,GAME_SUCCESS, GAME_FAIL}  from '../GAME_VALUE';\r\nclass Sky extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.me = React.createRef();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        return this.props.updateCount !== nextProps.updateCount;\r\n    }\r\n\r\n    render(){\r\n        var rd = this.props.renderingData;\r\n        // console.log(rd);\r\n        var drops = rd.drops.map((drop,index)=>{\r\n            return <Drop key={index} drop={drop}/>\r\n        });\r\n        const effect={\r\n            style : {\r\n                color : 'red'\r\n            },\r\n            message : ''\r\n        }\r\n        switch(rd.event){\r\n            case GAME_HIDE_WORD_EFFECT:\r\n                effect.message='hide';\r\n                break;\r\n            case GAME_MORE_SPEED_EFFECT:\r\n                effect.message='speed up';\r\n                break;\r\n            default:\r\n                effect.message = 'no';\r\n                effect.style = {\r\n                    color : 'black'\r\n                }\r\n                break;\r\n        }\r\n        var listUI = '';\r\n        if(this.props.mode === GAME_STOP){\r\n            listUI = <Menu tomenu={this.props.tomenu} updateCount ={this.props.updateCount} regame={this.props.regame} mode={this.props.mode}/>;\r\n        }else if(this.props.mode === GAME_SUCCESS || this.props.mode === GAME_FAIL){\r\n            listUI = <Result saveScore={this.props.saveScore} tomenu={this.props.tomenu} updateCount ={this.props.updateCount} regame={this.props.regame} nextgame={this.props.nextgame} mode={this.props.mode} score={rd.score}/>;\r\n        }\r\n        return (\r\n            <div className='Sky' ref={this.me}>\r\n                {listUI}\r\n                <div className='game-info'>score : {rd.score}, health : {rd.health}</div>\r\n                <div className='game-info'style={effect.style}>event : {effect.message}</div>\r\n                <div className='ready'>{rd.ready}</div>\r\n                {drops}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Sky;","import {initGame} from './Reducer';\r\n\r\nfunction loadJSON(url){\r\n    return fetch(url,)\r\n    .then(r=>r.json());\r\n}\r\n\r\nexport function loadLevel(url,dispatch){\r\n    return loadJSON(url)\r\n    .then(json=>{\r\n        dispatch(initGame(json));\r\n    })\r\n}\r\n","export default class Timer {\r\n    constructor(deltaTime = 1/60) {\r\n        let accumulatedTime = 0;\r\n        let lastTime = 0;\r\n        this.requestId = undefined;\r\n        this.stoped = false;\r\n        this.updateProxy = (time) => {\r\n            console.log(1);\r\n            \r\n            accumulatedTime += (time - lastTime) / 1000;\r\n\r\n            if (accumulatedTime > 1) {\r\n                accumulatedTime = 1;\r\n            }\r\n\r\n            while (accumulatedTime > deltaTime) {\r\n                this.update(deltaTime);\r\n                accumulatedTime -= deltaTime;\r\n            }\r\n            \r\n            lastTime = time;\r\n\r\n            this.enqueue();\r\n        }\r\n    }\r\n\r\n    enqueue() {\r\n        if(!this.stoped){\r\n            this.requestId = window.requestAnimationFrame(this.updateProxy);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.enqueue();\r\n    }\r\n    stop(){\r\n        if(this.requestId){\r\n            console.log(2);\r\n            window.cancelAnimationFrame(this.requestId);\r\n            this.requestId = undefined;\r\n            this.stoped = true;\r\n        }\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport Ground from './Ground';\r\nimport Sky from './Sky';\r\nimport {connect} from 'react-redux';\r\nimport { loadLevel } from '../loaders';\r\nimport {addDrop,updateDrops,checkDrops,changeMode, storeHealthAndScore,effectDrops,reset} from '../Reducer';\r\nimport KeyManager from '../KeyManager';\r\nimport {GAME_WIDTH,GAME_HEIGHT,GAME_READY,GAME_RUNNING,GAME_STOP,GAME_SUCCESS,GAME_FAIL,GAME_LEVEL,FRAME_FOR_MILISEC,GAME_LEVEL_LIMIT,GAME_WORD_TIMING,GAME_NO_EFFECT,GAME_SCORES}  from '../GAME_VALUE';\r\nimport Timer from './Timer';\r\n\r\nclass Game extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          updateCount : 0,\r\n          out : false\r\n        };\r\n        this.eventCount = 0;\r\n        this.renderingData = {\r\n            ready : '',\r\n            score : '',\r\n            health : '',\r\n            event : '',\r\n            drops : [],\r\n        };\r\n        this.update = this.update.bind(this);\r\n        this.gameReady = this.gameReady.bind(this);\r\n        this.gameUpdate = this.gameUpdate.bind(this);\r\n        this.startGame = this.startGame.bind(this);\r\n        this.tomenu = this.tomenu.bind(this);\r\n        this.regame = this.regame.bind(this);\r\n        this.saveScore = this.saveScore.bind(this);\r\n\r\n\r\n        var level = sessionStorage.getItem(GAME_LEVEL) === null ? {num : 1, score : this.props.score, health : this.props.health} : JSON.parse(sessionStorage.getItem(GAME_LEVEL));\r\n        sessionStorage.setItem(GAME_LEVEL,JSON.stringify(level));\r\n        this.timer = new Timer(FRAME_FOR_MILISEC);\r\n        this.timer.update = this.update;\r\n        this.startGame(level);\r\n    }\r\n    startGame(level){\r\n        \r\n        loadLevel(`/levels/${level.num}.json`,this.props.dispatch)\r\n        .then(()=>{\r\n            \r\n            this.props.dispatch(storeHealthAndScore(level.health,level.score));\r\n            this.eventCount = 0;\r\n            this.timer.start();\r\n        })\r\n    }\r\n    regame(){\r\n        this.startGame(JSON.parse(sessionStorage.getItem(GAME_LEVEL)));\r\n    }\r\n    nextgame(){\r\n        var level = JSON.parse(sessionStorage.getItem(GAME_LEVEL));\r\n        var _num = parseInt(level.num);\r\n        if(_num >= GAME_LEVEL_LIMIT){\r\n            alert('더 이상 레벨은 없습니다.');\r\n            return ;\r\n        }\r\n        sessionStorage.setItem(GAME_LEVEL, JSON.stringify(Object.assign({},level,{num : _num+1,score:this.props.score,health:this.props.health})));\r\n        this.startGame(JSON.parse(sessionStorage.getItem(GAME_LEVEL)));\r\n    }\r\n    tomenu(){\r\n        this.setState({\r\n            out : true\r\n        });\r\n    }\r\n    saveScore(){\r\n        if(window.confirm('저장하시겠습니까?')){\r\n            var username = window.prompt('등록할 이름을 입력하세요');\r\n            if(username !== null){\r\n                var data = JSON.parse(localStorage.getItem(GAME_SCORES));\r\n                if(data === null){\r\n                    data = {\r\n                        scores : [\r\n                            {\r\n                                username : username,\r\n                                score : this.props.score\r\n                            }\r\n                        ]\r\n                    }\r\n                    localStorage.setItem(GAME_SCORES,JSON.stringify(data));\r\n                }else{\r\n                    var new_scores = data.scores.concat({username : username,score : this.props.score});\r\n                    new_scores.sort((a,b)=>{\r\n                        return b.score - a.score;\r\n                    });\r\n\r\n                    localStorage.setItem(GAME_SCORES,JSON.stringify(Object.assign({},data,{scores : new_scores})));;\r\n                }\r\n                alert('저장이 완료되었습니다.');\r\n            }\r\n        }\r\n    }\r\n    update(){\r\n        this.gameUpdate();\r\n        if(this.props.mode === GAME_STOP || this.props.mode === GAME_SUCCESS || this.props.mode === GAME_FAIL) return ;\r\n        if(this.props.mode === GAME_READY) this.gameReady();\r\n        if(this.props.mode === GAME_RUNNING) this.gameRunning();  \r\n    }\r\n    \r\n    render(){\r\n        const style = {\r\n            width: GAME_WIDTH,\r\n            height: GAME_HEIGHT\r\n        }\r\n        \r\n        return (\r\n            <div style={style}>\r\n                <Sky saveScore={this.saveScore} \r\n                     tomenu={function(e){\r\n                        this.tomenu();\r\n                     }.bind(this)}\r\n                     regame = {this.regame}\r\n                     nextgame={(e)=>{\r\n                        this.nextgame();\r\n                     }}mode = {this.props.mode} updateCount={this.state.updateCount} renderingData={this.renderingData}></Sky>\r\n                <Ground></Ground>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    gameReady(){\r\n        \r\n        this.eventCount++;\r\n        if(this.eventCount >= 1){\r\n            this.renderingData = Object.assign({},this.renderingData,{ready:'Ready~~~'});\r\n        }\r\n        if(this.eventCount >= 150){\r\n            this.renderingData = Object.assign({},this.renderingData,{ready:'Go!!!'});\r\n        }\r\n        if(this.eventCount >= 200){\r\n            this.eventCount = 0;\r\n            this.renderingData = Object.assign({},this.renderingData,{ready:''});\r\n            this.props.dispatch(changeMode(GAME_RUNNING));\r\n        }\r\n\r\n    }\r\n    gameRunning(){\r\n        this.eventCount++;\r\n        if(this.props.effect !== GAME_NO_EFFECT){\r\n            this.props.dispatch(effectDrops());\r\n        }\r\n        this.props.dispatch(checkDrops());\r\n        if(this.eventCount % GAME_WORD_TIMING === 0){\r\n            this.props.dispatch(addDrop());\r\n        }\r\n        \r\n        this.props.dispatch(updateDrops());\r\n    }\r\n    gameUpdate(){\r\n        if(this.state.out){\r\n            this.setState({\r\n                out : false\r\n            })\r\n            sessionStorage.removeItem(GAME_LEVEL);\r\n            this.timer.stop();\r\n            this.props.dispatch(reset());\r\n            this.props.history.push('/');\r\n            \r\n        }else{\r\n            if (KeyManager.justPressed(27)) {\r\n                if (this.props.mode !== GAME_READY && this.props.mode !== GAME_SUCCESS && this.props.mode !== GAME_FAIL) {\r\n                    this.props.dispatch(changeMode(this.props.mode === GAME_RUNNING ? GAME_STOP : GAME_RUNNING));\r\n                }\r\n            }\r\n            KeyManager.update();\r\n            this.renderingData = Object.assign({}, this.renderingData, { score: this.props.score, health: this.props.health, drops: this.props.drops, event: this.props.effect });\r\n            this.setState({\r\n                updateCount: this.state.updateCount + 1\r\n            });\r\n        }\r\n    }\r\n}\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        mode : state.mode,\r\n        effect : state.effect,\r\n        drops : state.drops,\r\n        score : state.score,\r\n        health : state.health\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Game);","import React,{Component} from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Button from 'react-bootstrap/Button'\r\nclass Intro extends Component {\r\n\r\n    render(){\r\n        const style={\r\n            width : '1280px',\r\n            height : '815px'\r\n        }\r\n        \r\n        return (\r\n            \r\n            <Carousel >\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block\"\r\n                        style={style}\r\n                        src=\"/img/Lighthouse.jpg\"\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h1>타자 연습을 위한 산성비 게임입니다.</h1>\r\n                        <Button variant=\"primary\" size=\"lg\" onClick={\r\n                            (e)=>{\r\n                                this.props.history.push({\r\n                                    pathname : '/acid-rain',\r\n                                });\r\n                            }}>\r\n                            시작하기\r\n                        </Button> \r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block\"\r\n                        style={style}\r\n                        src=\"/img/Tulips.jpg\"\r\n                        alt=\"Third slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h1>타자 연습을 위한 산성비 게임입니다.</h1>\r\n                        <Button variant=\"primary\" size=\"lg\" onClick={\r\n                        (e)=>{\r\n                            this.props.history.push({\r\n                                pathname : '/score-list',\r\n                            });\r\n                        }\r\n                        }>\r\n                            기록보기\r\n                        </Button>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        )\r\n        // return (\r\n        //     <div>\r\n        //         <button onClick={\r\n        //             (e)=>{\r\n        //                 this.props.history.push({\r\n        //                     pathname : '/acid-rain',\r\n        //                 });\r\n        //             }\r\n        //         }>시작</button>\r\n        //         <button onClick={\r\n        //             (e)=>{\r\n        //                 this.props.history.push({\r\n        //                     pathname : '/score-list',\r\n        //                 });\r\n        //             }\r\n        //         }>점수표</button>\r\n        //     </div>\r\n        // );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Intro;","import React,{Component} from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {GAME_SCORES} from '../GAME_VALUE';\r\nclass ScoreList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        var data = JSON.parse(localStorage.getItem(GAME_SCORES));\r\n        this.state = {\r\n            list :  data === null ? null : data.scores\r\n        }\r\n    }\r\n    render(){\r\n        console.log(this.state.list);\r\n        var rs;\r\n        if(this.state.list === null) {\r\n            rs = <td colSpan='3'><h3 style={{color:'red'}}>등록된 점수가 없습니다.</h3></td>\r\n        }else{\r\n            rs = this.state.list.map((info,index)=>{\r\n                return (<tr key={index}>\r\n                            <td>{index+1}</td>\r\n                            <td>{info.username}</td>\r\n                            <td>{info.score}</td>\r\n                        </tr>);\r\n            });\r\n        }\r\n        \r\n        return (\r\n            <Card>\r\n                <Card.Header>\r\n                    <h1>\r\n                        점수 기록\r\n                        <Button className='float-right' variant=\"outline-success\" size=\"lg\" onClick={\r\n                            (e) => {\r\n                                this.props.history.push({\r\n                                    pathname: '/',\r\n                                });\r\n                            }\r\n                        }>홈으로</Button>    \r\n                        <Button className='float-right' variant=\"outline-primary\" size=\"lg\" onClick={\r\n                            (e) => {\r\n                                localStorage.removeItem(GAME_SCORES);\r\n                                this.setState({\r\n                                    list: null\r\n                                })\r\n\r\n                            }                \r\n                        }>초기화</Button>\r\n                    </h1>\r\n                    \r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <th>순위</th>\r\n                            <th>유저명</th>\r\n                            <th>점수</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rs}\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n            // <div>\r\n            //     <button onClick={\r\n            //         (e)=>{\r\n            //             this.props.history.push({\r\n            //                 pathname : '/',\r\n            //             });\r\n            //         }\r\n            //     }>홈으로</button>\r\n            //     <button onClick={\r\n            //         (e)=>{\r\n            //             localStorage.removeItem(GAME_SCORES);\r\n            //             this.setState({\r\n            //                 list : null\r\n            //             })\r\n                        \r\n            //         }\r\n            //     }>초기화</button>\r\n            //     <ul>\r\n            //         {rs}\r\n            //     </ul>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ScoreList;","import React,{Component} from 'react';\nimport './App.css';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Game from './component/Game';\nimport Intro from './component/Intro';\nimport ScoreList from './component/ScoreList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component{\n  render(){\n    return (\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Intro}/>\n          <Route path='/acid-rain' component={Game}/>\n          <Route path='/score-list' component={ScoreList}/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Reducer from './Reducer';\n\nlet store = createStore(Reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render(\n<Provider store={store}>\n    <App/>\n</Provider>\n, document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}